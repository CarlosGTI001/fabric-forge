From a3deb0c3c88060b77a591b6b011d2ee0839b5d04 Mon Sep 17 00:00:00 2001
From: Jamie Mansfield <jmansfield@cadixdev.org>
Date: Wed, 17 Jun 2020 13:11:03 +0100
Subject: [PATCH] Remove redundant buildscripts and use FG3


diff --git a/build.gradle b/build.gradle
index cc51cd2..f65003e 100644
--- a/build.gradle
+++ b/build.gradle
@@ -1,12 +1,25 @@
+buildscript {
+	repositories {
+		mavenCentral()
+		maven {
+			url = 'https://files.minecraftforge.net/maven'
+		}
+		maven {
+			url = 'http://repo.spongepowered.org/maven'
+		}
+	}
+	dependencies {
+		classpath 'net.minecraftforge.gradle:ForgeGradle:3.0.174'
+		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
+	}
+}
+
 plugins {
 	id 'java'
 	id 'eclipse'
 	id 'idea'
 	id 'maven-publish'
-	id 'fabric-loom' version '0.4-SNAPSHOT' apply false
-	id 'net.minecrell.licenser' version '0.4.1'
 	id "org.ajoberstar.grgit" version "3.1.1"
-	id 'com.matthewprenger.cursegradle' version "1.4.0"
 }
 
 def ENV = System.getenv()
@@ -14,7 +27,6 @@ def ENV = System.getenv()
 class Globals {
 	static def baseVersion = "0.12.0"
 	static def mcVersion = "1.15.2"
-	static def yarnVersion = "+build.1"
 }
 
 version = Globals.baseVersion + "+" + (ENV.BUILD_NUMBER ? ("build." + ENV.BUILD_NUMBER) : "local") + "-" + getBranch()
@@ -47,51 +59,64 @@ def getBranch() {
 }
 
 allprojects {
-	apply plugin: 'checkstyle'
 	apply plugin: 'maven-publish'
-	apply plugin: 'fabric-loom'
-	apply plugin: 'net.minecrell.licenser'
+	apply plugin: 'net.minecraftforge.gradle'
+	apply plugin: 'org.spongepowered.mixin'
 
 	sourceCompatibility = 1.8
 	targetCompatibility = 1.8
 
 	group = "net.fabricmc.fabric-api"
 
-	sourceSets {
-		testmod {
-			compileClasspath += main.compileClasspath
-			runtimeClasspath += main.runtimeClasspath
+	repositories {
+		mavenCentral()
+		jcenter()
+		maven {
+			name = 'Fabric'
+			url = 'http://maven.modmuss50.me/'
+		}
+		maven {
+			name = 'SpongePowered'
+			url = 'http://repo.spongepowered.org/maven'
+		}
+		maven {
+			name = 'mojang'
+			url = 'https://libraries.minecraft.net/'
 		}
 	}
 
 	dependencies {
-		minecraft "com.mojang:minecraft:$Globals.mcVersion"
-		mappings "net.fabricmc:yarn:${Globals.mcVersion}${Globals.yarnVersion}:v2"
-		modCompile "net.fabricmc:fabric-loader:0.8.2+build.194"
+		minecraft 'net.minecraftforge:forge:1.15.2-31.2.9'
+		compile project(':fabric-loader')
 	}
 
-	configurations {
-		dev
-	}
+	minecraft {
+		mappings channel: 'snapshot', version: '20200514-1.15.1'
 
-	repositories {
-		mavenLocal()
-	}
+		runs {
+			client {
+				workingDirectory rootProject.file('run')
 
-	jar {
-		classifier = "dev"
-	}
+				// Recommended logging data for a userdev environment
+				property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
 
-	afterEvaluate {
-		remapJar {
-			input = file("${project.buildDir}/libs/$archivesBaseName-${version}-dev.jar")
-			archiveName = "${archivesBaseName}-${version}.jar"
-		}
+				// Recommended logging level for the console
+				property 'forge.logging.console.level', 'debug'
+			}
+
+			server {
+				workingDirectory rootProject.file('run')
 
-		artifacts {
-			dev file: file("${project.buildDir}/libs/$archivesBaseName-${version}-dev.jar"), type: "jar", builtBy: jar
+				// Recommended logging data for a userdev environment
+				property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
+
+				// Recommended logging level for the console
+				property 'forge.logging.console.level', 'debug'
+			}
 		}
+	}
 
+	afterEvaluate {
 		processResources {
 			inputs.property "version", project.version
 
@@ -104,177 +129,10 @@ allprojects {
 				exclude "fabric.mod.json"
 			}
 		}
-
-		license {
-			header rootProject.file('HEADER')
-			include '**/*.java'
-		}
 	}
 
 	task sourcesJar(type: Jar, dependsOn: classes) {
 		classifier = 'sources'
 		from sourceSets.main.allSource
 	}
-
-	checkstyle {
-		configFile = rootProject.file("checkstyle.xml")
-		toolVersion = '8.31'
-	}
-}
-
-javadoc {
-	options {
-		source = "8"
-		encoding = 'UTF-8'
-		charSet = 'UTF-8'
-		memberLevel = JavadocMemberLevel.PACKAGE
-		links(
-				'https://guava.dev/releases/21.0/api/docs/',
-				'https://asm.ow2.io/javadoc/',
-				'https://docs.oracle.com/javase/8/docs/api/',
-				'http://jenkins.liteloader.com/job/Mixin/javadoc/',
-				'https://logging.apache.org/log4j/2.x/log4j-api/apidocs/'
-				// Need to add minecraft jd publication etc once there is one available
-		)
-		// Disable the crazy super-strict doclint tool in Java 8
-		addStringOption('Xdoclint:none', '-quiet')
-	}
-	allprojects.each {
-		source(it.sourceSets.main.allJava.srcDirs)
-	}
-	classpath = sourceSets.main.compileClasspath
-	include("**/api/**")
-	failOnError false
 }
-
-task javadocJar(type: Jar) {
-	dependsOn javadoc
-	from javadoc.destinationDir
-	//Set as `fatjavadoc` to prevent an ide form trying to use this javadoc, over using the modules javadoc
-	classifier = 'fatjavadoc'
-}
-build.dependsOn javadocJar
-
-subprojects {
-
-	dependencies {
-		testmodCompile sourceSets.main.output
-	}
-
-	task remapMavenJar(type: Copy, dependsOn: remapJar) {
-		afterEvaluate {
-			from("${project.buildDir}/libs/$archivesBaseName-${version}.jar")
-			into("${project.buildDir}/libs/")
-			rename { String fn -> "$archivesBaseName-${version}-maven.jar" }
-		}
-	}
-
-	publishing {
-		publications {
-			mavenJava(MavenPublication) {
-				afterEvaluate {
-					artifact(file("${project.buildDir}/libs/$archivesBaseName-${version}-maven.jar")) {
-						builtBy remapMavenJar
-					}
-					artifact(sourcesJar) {
-						builtBy remapSourcesJar
-					}
-				}
-			}
-		}
-
-		setupRepositories(repositories)
-	}
-
-	javadoc.enabled = false
-}
-
-task remapMavenJar(type: net.fabricmc.loom.task.RemapJarTask, dependsOn: jar) {
-	afterEvaluate {
-		input = file("${project.buildDir}/libs/${archivesBaseName}-${version}-dev.jar")
-		archiveName = "${archivesBaseName}-${version}-maven.jar"
-		addNestedDependencies = false
-	}
-}
-
-publishing {
-	publications {
-		mavenJava(MavenPublication) {
-			artifact(file("${project.buildDir}/libs/$archivesBaseName-${version}-maven.jar")) {
-				builtBy remapMavenJar
-			}
-			artifact(sourcesJar) {
-				builtBy remapSourcesJar
-			}
-			artifact javadocJar
-			pom.withXml {
-				def depsNode = asNode().appendNode("dependencies")
-				subprojects.each {
-					def depNode = depsNode.appendNode("dependency")
-					depNode.appendNode("groupId", it.group)
-					depNode.appendNode("artifactId", it.name)
-					depNode.appendNode("version", it.version)
-					depNode.appendNode("scope", "compile")
-				}
-			}
-		}
-	}
-
-	setupRepositories(repositories)
-}
-
-void setupRepositories(RepositoryHandler repositories) {
-	//repositories.mavenLocal() // uncomment for testing
-	if (project.hasProperty('mavenPass')) {
-		repositories.maven {
-			url "http://mavenupload.modmuss50.me/"
-			credentials {
-				username 'buildslave'
-				password project.getProperty('mavenPass')
-			}
-		}
-	}
-}
-
-task licenseFormatAll
-subprojects { p -> licenseFormatAll.dependsOn("${p.path}:licenseFormat") }
-subprojects.each { remapJar.dependsOn("${it.path}:remapJar") }
-
-sourceSets {
-	testmod
-}
-
-dependencies {
-	afterEvaluate {
-		subprojects.each {
-			compile project(path: ":${it.name}", configuration: "dev")
-			include project("${it.name}:")
-
-			testmodCompile project("${it.name}:").sourceSets.testmod.output
-		}
-	}
-}
-
-curseforge {
-	if (project.hasProperty('curse_api_key')) {
-		apiKey = project.getProperty('curse_api_key')
-	}
-	project {
-		id = '306612'
-		changelog = 'A changelog can be found at https://github.com/FabricMC/fabric/commits'
-		releaseType = 'release'
-		addGameVersion '1.15.2'
-		addGameVersion 'Fabric'
-		mainArtifact(file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")) {
-			displayName = "[$Globals.mcVersion] Fabric API $Globals.baseVersion build $ENV.BUILD_NUMBER"
-		}
-		afterEvaluate {
-			uploadTask.dependsOn("remapJar")
-		}
-	}
-	options {
-		forgeGradleIntegration = false
-	}
-}
-
-apply from: 'https://github.com/FabricMC/fabric-docs/raw/master/gradle/ideconfig.gradle'
-- 
2.26.2

